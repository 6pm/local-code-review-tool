services:
  app:
    container_name: code-review-app
    build: .
    volumes:
      - .:/app
      - ./.env:/app/.env
      - ./temp:/app/temp
      - /app/node_modules
    depends_on:
      - ollama
    environment:
      - MODEL_NAME=${MODEL_NAME:-qwen2.5-coder:7b}
      - BITBUCKET_USERNAME=${BITBUCKET_USERNAME}
      - BITBUCKET_APP_PASSWORD=${BITBUCKET_APP_PASSWORD}
      - PULL_REQUEST_URL=${PULL_REQUEST_URL}
      - OLLAMA_HOST=ollama
      - MAX_CONTEXT_LENGTH=${MAX_CONTEXT_LENGTH:-20000}
    networks:
      - app-network
    # Pull the model before running the app
    command: >
      sh -c "
        echo 'Waiting for Ollama to start...' &&
        sleep 5 &&
        echo 'Pulling model ${MODEL_NAME}...' &&
        curl -f -X POST http://ollama:11434/api/pull -d '{\"name\":\"${MODEL_NAME}\"}' &&
        echo 'Model pulled successfully!' &&
        pnpm start
      "

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - app-network
    # Memory and resource limits to prevent system crashes
    deploy:
      resources:
        limits:
          memory: 8G        # Maximum memory usage
          cpus: '3.0'       # Limit CPU usage
        reservations:
          memory: 5G        # Minimum guaranteed memory
          cpus: '1.0'       # Minimum guaranteed CPU
    # Environment variables for Ollama memory management
    environment:
      - OLLAMA_MAX_LOADED_MODELS=3           # Only keep 1 model in memory
      - OLLAMA_NUM_PARALLEL=1                # Limit parallel requests
      - OLLAMA_MAX_QUEUE=10                  # Limit request queue
      - OLLAMA_LOAD_TIMEOUT=5m               # Model load timeout
    # Restart policy
    restart: unless-stopped
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  ollama-data:
